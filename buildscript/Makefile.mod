#This file is automatically generated

crosstool:=$(crosstool-4.5.2)
crosstool-4.5.2=$(PRJ_DIR)/tool/crosstool-4.5.2

image-tool=$(PRJ_DIR)/tool/image-tool

board-info=$(PRJ_DIR)/board-info

platform:
	$(MAKE) -C $(PRJ_DIR)/kernel/platform all OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/platform 
	$(MAKE) -C $(PRJ_DIR)/kernel/platform install INSTALL_DIR=$(PRJ_DIR)/kernel/platform/target OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/platform
	if [ -d $(PRJ_DIR)/kernel/platform/target ]; then \
		ln -sf $(PRJ_DIR)/kernel/platform/target/include/* $(KERNEL_INC_DIR); \
		ln -sf $(PRJ_DIR)/kernel/platform/target/lib/* $(KERNEL_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
endif
platform-clean:
	$(MAKE) -C $(PRJ_DIR)/kernel/platform clean OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/platform
	$(MAKE) -C $(PRJ_DIR)/kernel/platform distclean
	rm -rf $(PRJ_DIR)/kernel/platform/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
kernel:
else
kernel: platform
endif
	$(MAKE) -C $(PRJ_DIR)/kernel/freertos-8.2.0 all OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/freertos-8.2.0 
	$(MAKE) -C $(PRJ_DIR)/kernel/freertos-8.2.0 install INSTALL_DIR=$(PRJ_DIR)/kernel/freertos-8.2.0/target OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/freertos-8.2.0
	if [ -d $(PRJ_DIR)/kernel/freertos-8.2.0/target ]; then \
		ln -sf $(PRJ_DIR)/kernel/freertos-8.2.0/target/include/* $(KERNEL_INC_DIR); \
		ln -sf $(PRJ_DIR)/kernel/freertos-8.2.0/target/lib/* $(KERNEL_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/kernel/freertos-8.2.0/target ]; then \
		ln -sf $(PRJ_DIR)/kernel/freertos-8.2.0/target/include/* $(KERNEL_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/kernel/freertos-8.2.0/target/lib/* $(KERNEL_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
kernel-clean:
else
kernel-clean: platform-clean
endif
	$(MAKE) -C $(PRJ_DIR)/kernel/freertos-8.2.0 clean OBJ_DIR=$(PRJ_OBJ_DIR)/kernel/freertos-8.2.0
	$(MAKE) -C $(PRJ_DIR)/kernel/freertos-8.2.0 distclean
	rm -rf $(PRJ_DIR)/kernel/freertos-8.2.0/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
cli:
else
cli: lib_nonstd_c  middleware_video  middleware_fatfs  middleware_sd  middleware_sf  middleware_record  middleware_rtsp  pwm  middleware_cyassl  gpio  usb_host  usb_device  middleware_usbd  middleware_snx-ez  middleware_file_manager
endif
	$(MAKE) -C $(PRJ_DIR)/system/cli all OBJ_DIR=$(PRJ_OBJ_DIR)/system/cli 
	$(MAKE) -C $(PRJ_DIR)/system/cli install INSTALL_DIR=$(PRJ_DIR)/system/cli/target OBJ_DIR=$(PRJ_OBJ_DIR)/system/cli
	if [ -d $(PRJ_DIR)/system/cli/target ]; then \
		ln -sf $(PRJ_DIR)/system/cli/target/include/* $(KERNEL_INC_DIR); \
		ln -sf $(PRJ_DIR)/system/cli/target/lib/* $(KERNEL_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/system/cli/target ]; then \
		ln -sf $(PRJ_DIR)/system/cli/target/include/* $(KERNEL_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/system/cli/target/lib/* $(KERNEL_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
cli-clean:
else
cli-clean: lib_nonstd_c-clean middleware_video-clean middleware_fatfs-clean middleware_sd-clean middleware_sf-clean middleware_record-clean middleware_rtsp-clean pwm-clean middleware_cyassl-clean gpio-clean usb_host-clean usb_device-clean middleware_usbd-clean middleware_snx-ez-clean middleware_file_manager-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/system/cli clean OBJ_DIR=$(PRJ_OBJ_DIR)/system/cli
	$(MAKE) -C $(PRJ_DIR)/system/cli distclean
	rm -rf $(PRJ_DIR)/system/cli/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
trace:
else
trace: kernel  lib_nonstd_c  timer
endif
	$(MAKE) -C $(PRJ_DIR)/system/trace all OBJ_DIR=$(PRJ_OBJ_DIR)/system/trace 
	$(MAKE) -C $(PRJ_DIR)/system/trace install INSTALL_DIR=$(PRJ_DIR)/system/trace/target OBJ_DIR=$(PRJ_OBJ_DIR)/system/trace
	if [ -d $(PRJ_DIR)/system/trace/target ]; then \
		ln -sf $(PRJ_DIR)/system/trace/target/include/* $(KERNEL_INC_DIR); \
		ln -sf $(PRJ_DIR)/system/trace/target/lib/* $(KERNEL_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/system/trace/target ]; then \
		ln -sf $(PRJ_DIR)/system/trace/target/include/* $(KERNEL_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/system/trace/target/lib/* $(KERNEL_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
trace-clean:
else
trace-clean: kernel-clean lib_nonstd_c-clean timer-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/system/trace clean OBJ_DIR=$(PRJ_OBJ_DIR)/system/trace
	$(MAKE) -C $(PRJ_DIR)/system/trace distclean
	rm -rf $(PRJ_DIR)/system/trace/target

##################################
###those are middleware modules###
##################################

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
lib_nonstd_c:
else
lib_nonstd_c: uart
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_nonstd_c all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_nonstd_c 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_nonstd_c install INSTALL_DIR=$(PRJ_DIR)/middleware/lib_nonstd_c/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_nonstd_c 
	if [ -d $(PRJ_DIR)/middleware/lib_nonstd_c/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_nonstd_c/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/lib_nonstd_c/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/lib_nonstd_c/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_nonstd_c/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/lib_nonstd_c/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/lib_nonstd_c/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/lib_nonstd_c/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
lib_nonstd_c-clean:
else
lib_nonstd_c-clean: uart-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_nonstd_c clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_nonstd_c 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_nonstd_c distclean
	rm -rf $(PRJ_DIR)/middleware/lib_nonstd_c/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_video:
else
middleware_video: kernel  lib_nonstd_c  video-codec  isp  timer  wifi
endif
	if [ -d $(PRJ_DIR)/middleware/video/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/video/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/video/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/video/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/video/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/video/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/video/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/video/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_video-clean:
else
middleware_video-clean: kernel-clean lib_nonstd_c-clean video-codec-clean isp-clean timer-clean wifi-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_audio:
else
middleware_audio: kernel  lib_nonstd_c  audio  middleware_fatfs
endif
	if [ -d $(PRJ_DIR)/middleware/audio/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/audio/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/audio/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/audio/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/audio/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/audio/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/audio/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/audio/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_audio-clean:
else
middleware_audio-clean: kernel-clean lib_nonstd_c-clean audio-clean middleware_fatfs-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_sd:
else
middleware_sd: sd
endif
	if [ -d $(PRJ_DIR)/middleware/sd/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/sd/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/sd/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/sd/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/sd/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/sd/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/sd/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/sd/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_sd-clean:
else
middleware_sd-clean: sd-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_sf:
else
middleware_sf: sf
endif
	if [ -d $(PRJ_DIR)/middleware/sf/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/sf/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/sf/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/sf/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/sf/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/sf/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/sf/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/sf/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_sf-clean:
else
middleware_sf-clean: sf-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_fatfs:
else
middleware_fatfs: middleware_sd
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/fatfs all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/fatfs 
	$(MAKE) -C $(PRJ_DIR)/middleware/fatfs install INSTALL_DIR=$(PRJ_DIR)/middleware/fatfs/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/fatfs 
	if [ -d $(PRJ_DIR)/middleware/fatfs/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/fatfs/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/fatfs/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/fatfs/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/fatfs/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/fatfs/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/fatfs/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/fatfs/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_fatfs-clean:
else
middleware_fatfs-clean: middleware_sd-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/fatfs clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/fatfs 
	$(MAKE) -C $(PRJ_DIR)/middleware/fatfs distclean
	rm -rf $(PRJ_DIR)/middleware/fatfs/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_record:
else
middleware_record: middleware_fatfs  middleware_audio  middleware_file_manager
endif
	if [ -d $(PRJ_DIR)/middleware/record/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/record/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/record/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/record/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/record/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/record/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/record/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/record/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_record-clean:
else
middleware_record-clean: middleware_fatfs-clean middleware_audio-clean middleware_file_manager-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_nvram:
else
middleware_nvram: kernel  lib_nonstd_c  middleware_sf  middleware_zlib  middleware_gzip
endif
	if [ -d $(PRJ_DIR)/middleware/nvram/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/nvram/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/nvram/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/nvram/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/nvram/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/nvram/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/nvram/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/nvram/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_nvram-clean:
else
middleware_nvram-clean: kernel-clean lib_nonstd_c-clean middleware_sf-clean middleware_zlib-clean middleware_gzip-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_lwip:
else
middleware_lwip: kernel
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lwip all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lwip 
	$(MAKE) -C $(PRJ_DIR)/middleware/lwip install INSTALL_DIR=$(PRJ_DIR)/middleware/lwip/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lwip 
	if [ -d $(PRJ_DIR)/middleware/lwip/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lwip/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/lwip/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/lwip/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lwip/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/lwip/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/lwip/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/lwip/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_lwip-clean:
else
middleware_lwip-clean: kernel-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lwip clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lwip 
	$(MAKE) -C $(PRJ_DIR)/middleware/lwip distclean
	rm -rf $(PRJ_DIR)/middleware/lwip/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_snx-ez:
else
middleware_snx-ez: kernel  middleware_lwip  middleware_nvram  middleware_cyassl  middleware_td  middleware_zbar-0.10
endif
	if [ -d $(PRJ_DIR)/middleware/snx-ez/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/snx-ez/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/snx-ez/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/snx-ez/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/snx-ez/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/snx-ez/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/snx-ez/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/snx-ez/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_snx-ez-clean:
else
middleware_snx-ez-clean: kernel-clean middleware_lwip-clean middleware_nvram-clean middleware_cyassl-clean middleware_td-clean middleware_zbar-0.10-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_rtsp:
else
middleware_rtsp: kernel  middleware_lwip  middleware_nvram
endif
	if [ -d $(PRJ_DIR)/middleware/rtsp/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/rtsp/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/rtsp/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/rtsp/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/rtsp/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/rtsp/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/rtsp/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/rtsp/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_rtsp-clean:
else
middleware_rtsp-clean: kernel-clean middleware_lwip-clean middleware_nvram-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_cyassl:
else
middleware_cyassl: middleware_lwip
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/cyassl all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/cyassl 
	$(MAKE) -C $(PRJ_DIR)/middleware/cyassl install INSTALL_DIR=$(PRJ_DIR)/middleware/cyassl/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/cyassl 
	if [ -d $(PRJ_DIR)/middleware/cyassl/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/cyassl/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/cyassl/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/cyassl/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/cyassl/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/cyassl/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/cyassl/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/cyassl/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_cyassl-clean:
else
middleware_cyassl-clean: middleware_lwip-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/cyassl clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/cyassl 
	$(MAKE) -C $(PRJ_DIR)/middleware/cyassl distclean
	rm -rf $(PRJ_DIR)/middleware/cyassl/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_lib_cloud:
else
middleware_lib_cloud: kernel  lib_nonstd_c  middleware_json  middleware_lwip  middleware_cyassl  middleware_libwebsockets
endif
	if [ -d $(PRJ_DIR)/middleware/lib_cloud/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_cloud/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/lib_cloud/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/lib_cloud/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_cloud/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/lib_cloud/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/lib_cloud/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/lib_cloud/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_lib_cloud-clean:
else
middleware_lib_cloud-clean: kernel-clean lib_nonstd_c-clean middleware_json-clean middleware_lwip-clean middleware_cyassl-clean middleware_libwebsockets-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_json:
else
middleware_json: kernel  lib_nonstd_c
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/json all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/json 
	$(MAKE) -C $(PRJ_DIR)/middleware/json install INSTALL_DIR=$(PRJ_DIR)/middleware/json/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/json 
	if [ -d $(PRJ_DIR)/middleware/json/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/json/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/json/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/json/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/json/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/json/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/json/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/json/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_json-clean:
else
middleware_json-clean: kernel-clean lib_nonstd_c-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/json clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/json 
	$(MAKE) -C $(PRJ_DIR)/middleware/json distclean
	rm -rf $(PRJ_DIR)/middleware/json/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_td:
else
middleware_td: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/middleware/tone_detection/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/tone_detection/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/tone_detection/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/tone_detection/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/tone_detection/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/tone_detection/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/tone_detection/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/tone_detection/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_td-clean:
else
middleware_td-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_libwebsockets:
else
middleware_libwebsockets: kernel  middleware_lwip
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/libwebsockets all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/libwebsockets 
	$(MAKE) -C $(PRJ_DIR)/middleware/libwebsockets install INSTALL_DIR=$(PRJ_DIR)/middleware/libwebsockets/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/libwebsockets 
	if [ -d $(PRJ_DIR)/middleware/libwebsockets/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/libwebsockets/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/libwebsockets/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/libwebsockets/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/libwebsockets/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/libwebsockets/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/libwebsockets/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/libwebsockets/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_libwebsockets-clean:
else
middleware_libwebsockets-clean: kernel-clean middleware_lwip-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/libwebsockets clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/libwebsockets 
	$(MAKE) -C $(PRJ_DIR)/middleware/libwebsockets distclean
	rm -rf $(PRJ_DIR)/middleware/libwebsockets/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_usbd:
else
middleware_usbd: kernel  lib_nonstd_c  usb_device  middleware_sd  middleware_fwupgrade  middleware_audio  wifi
endif
	if [ -d $(PRJ_DIR)/middleware/usbd/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/usbd/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/usbd/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/usbd/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/usbd/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/usbd/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/usbd/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/usbd/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_usbd-clean:
else
middleware_usbd-clean: kernel-clean lib_nonstd_c-clean usb_device-clean middleware_sd-clean middleware_fwupgrade-clean middleware_audio-clean wifi-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_usbh:
else
middleware_usbh: kernel  lib_nonstd_c  usb_host  usb_host_class
endif
	if [ -d $(PRJ_DIR)/middleware/usbh/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/usbh/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/usbh/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/usbh/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/usbh/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/usbh/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/usbh/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/usbh/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_usbh-clean:
else
middleware_usbh-clean: kernel-clean lib_nonstd_c-clean usb_host-clean usb_host_class-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_zbar-0.10:
else
middleware_zbar-0.10: lib_nonstd_c
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/zbar-0.10 all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/zbar-0.10 
	$(MAKE) -C $(PRJ_DIR)/middleware/zbar-0.10 install INSTALL_DIR=$(PRJ_DIR)/middleware/zbar-0.10/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/zbar-0.10 
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/zbar-0.10/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/zbar-0.10/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/zbar-0.10/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/zbar-0.10/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/zbar-0.10/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/zbar-0.10/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_zbar-0.10-clean:
else
middleware_zbar-0.10-clean: lib_nonstd_c-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/zbar-0.10 clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/zbar-0.10 
	$(MAKE) -C $(PRJ_DIR)/middleware/zbar-0.10 distclean
	rm -rf $(PRJ_DIR)/middleware/zbar-0.10/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_fwupgrade:
else
middleware_fwupgrade: lib_nonstd_c  watch_dog
endif
	if [ -d $(PRJ_DIR)/middleware/fwupgrade/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/fwupgrade/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/fwupgrade/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/fwupgrade/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/fwupgrade/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/fwupgrade/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/fwupgrade/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/fwupgrade/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_fwupgrade-clean:
else
middleware_fwupgrade-clean: lib_nonstd_c-clean watch_dog-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_automount:
else
middleware_automount: middleware_sd  middleware_fatfs
endif
	if [ -d $(PRJ_DIR)/middleware/automount/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/automount/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/automount/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/automount/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/automount/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/automount/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/automount/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/automount/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_automount-clean:
else
middleware_automount-clean: middleware_sd-clean middleware_fatfs-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_file_manager:
else
middleware_file_manager: middleware_automount
endif
	if [ -d $(PRJ_DIR)/middleware/file_manager/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/file_manager/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/file_manager/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/file_manager/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/file_manager/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/file_manager/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/file_manager/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/file_manager/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_file_manager-clean:
else
middleware_file_manager-clean: middleware_automount-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_zlib:
else
middleware_zlib: lib_nonstd_c
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_zlib all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_zlib 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_zlib install INSTALL_DIR=$(PRJ_DIR)/middleware/lib_zlib/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_zlib 
	if [ -d $(PRJ_DIR)/middleware/lib_zlib/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_zlib/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/lib_zlib/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/lib_zlib/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_zlib/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/lib_zlib/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/lib_zlib/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/lib_zlib/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_zlib-clean:
else
middleware_zlib-clean: lib_nonstd_c-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_zlib clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_zlib 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_zlib distclean
	rm -rf $(PRJ_DIR)/middleware/lib_zlib/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_gzip:
else
middleware_gzip: lib_nonstd_c
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_gzip all OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_gzip 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_gzip install INSTALL_DIR=$(PRJ_DIR)/middleware/lib_gzip/target OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_gzip 
	if [ -d $(PRJ_DIR)/middleware/lib_gzip/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_gzip/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/lib_gzip/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/lib_gzip/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/lib_gzip/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/lib_gzip/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/lib_gzip/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/lib_gzip/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_gzip-clean:
else
middleware_gzip-clean: lib_nonstd_c-clean
endif
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_gzip clean OBJ_DIR=$(PRJ_OBJ_DIR)/middleware/lib_gzip 
	$(MAKE) -C $(PRJ_DIR)/middleware/lib_gzip distclean
	rm -rf $(PRJ_DIR)/middleware/lib_gzip/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_mcu_ctrl:
else
middleware_mcu_ctrl: lib_nonstd_c  uart
endif
	if [ -d $(PRJ_DIR)/middleware/mcu_ctrl/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/mcu_ctrl/target/include/* $(MIDDLEWARE_INC_DIR); \
		ln -sf $(PRJ_DIR)/middleware/mcu_ctrl/target/lib/* $(MIDDLEWARE_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/middleware/mcu_ctrl/target ]; then \
		ln -sf $(PRJ_DIR)/middleware/mcu_ctrl/target/include/* $(MIDDLEWARE_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/middleware/mcu_ctrl/target/lib/* $(MIDDLEWARE_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/middleware/mcu_ctrl/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/middleware/mcu_ctrl/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
middleware_mcu_ctrl-clean:
else
middleware_mcu_ctrl-clean: lib_nonstd_c-clean uart-clean 
endif


##############################
###those are driver modules###
##############################

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
mac:
else
mac: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/mac/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/mac/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/mac/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/mac/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/mac/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/mac/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/mac/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/mac/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
mac-clean:
else
mac-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
video-codec:
else
video-codec: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/video-codec/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/video-codec/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/video-codec/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/video-codec/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/video-codec/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/video-codec/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/video-codec/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/video-codec/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
video-codec-clean:
else
video-codec-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
uart:
else
uart: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/uart/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/uart/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/uart/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/uart/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/uart/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/uart/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/uart/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/uart/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
uart-clean:
else
uart-clean: kernel-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
i2c:
else
i2c: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/i2c/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/i2c/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/i2c/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/i2c/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/i2c/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/i2c/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/i2c/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/i2c/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
i2c-clean:
else
i2c-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sensor:
else
sensor: kernel  lib_nonstd_c  i2c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/sensor/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sensor/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sensor/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/sensor/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sensor/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sensor/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/sensor/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/sensor/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sensor-clean:
else
sensor-clean: kernel-clean lib_nonstd_c-clean i2c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
isp:
else
isp: kernel  lib_nonstd_c  i2c  sensor  middleware_nvram
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/isp/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/isp/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/isp/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/isp/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/isp/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/isp/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/isp/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/isp/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
isp-clean:
else
isp-clean: kernel-clean lib_nonstd_c-clean i2c-clean sensor-clean middleware_nvram-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
audio:
else
audio: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/audio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/audio/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/audio/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/audio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/audio/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/audio/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/audio/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/audio/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
audio-clean:
else
audio-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sf:
else
sf: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/sf/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sf/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sf/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/sf/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sf/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sf/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/sf/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/sf/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sf-clean:
else
sf-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sd:
else
sd: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/sd/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sd/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sd/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/sd/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sd/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sd/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/sd/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/sd/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sd-clean:
else
sd-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sdio:
else
sdio: kernel  lib_nonstd_c  sd
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/sdio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sdio/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sdio/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/sdio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sdio/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/sdio/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/sdio/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/sdio/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
sdio-clean:
else
sdio-clean: kernel-clean lib_nonstd_c-clean sd-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
gpio:
else
gpio: kernel  spi  pwm  sf
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/gpio all OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/gpio 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/gpio install INSTALL_DIR=$(PRJ_DIR)/driver/sn986xx/gpio/target OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/gpio 
	if [ -d $(PRJ_DIR)/driver/sn986xx/gpio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/gpio/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/gpio/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/gpio/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/gpio/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/gpio/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/gpio/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/gpio/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
gpio-clean:
else
gpio-clean: kernel-clean spi-clean pwm-clean sf-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/gpio clean OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/gpio 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/gpio distclean
	rm -rf $(PRJ_DIR)/driver/sn986xx/gpio/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
pwm:
else
pwm: kernel
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/pwm all OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/pwm 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/pwm install INSTALL_DIR=$(PRJ_DIR)/driver/sn986xx/pwm/target OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/pwm 
	if [ -d $(PRJ_DIR)/driver/sn986xx/pwm/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/pwm/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/pwm/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/pwm/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/pwm/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/pwm/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/pwm/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/pwm/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
pwm-clean:
else
pwm-clean: kernel-clean
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/pwm clean OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/pwm 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/pwm distclean
	rm -rf $(PRJ_DIR)/driver/sn986xx/pwm/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
rtc:
else
rtc: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/rtc/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/rtc/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/rtc/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/rtc/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/rtc/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/rtc/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/rtc/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/rtc/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
rtc-clean:
else
rtc-clean: kernel-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
spi:
else
spi: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/spi/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/spi/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/spi/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/spi/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/spi/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/spi/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/spi/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/spi/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
spi-clean:
else
spi-clean: kernel-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
timer:
else
timer: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/timer/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/timer/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/timer/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/timer/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/timer/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/timer/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/timer/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/timer/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
timer-clean:
else
timer-clean: kernel-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
watch_dog:
else
watch_dog: kernel
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/watch_dog all OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/watch_dog 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/watch_dog install INSTALL_DIR=$(PRJ_DIR)/driver/sn986xx/watch_dog/target OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/watch_dog 
	if [ -d $(PRJ_DIR)/driver/sn986xx/watch_dog/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/watch_dog/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/watch_dog/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/watch_dog/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/watch_dog/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/watch_dog/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/watch_dog/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/watch_dog/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
watch_dog-clean:
else
watch_dog-clean: kernel-clean
endif
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/watch_dog clean OBJ_DIR=$(PRJ_OBJ_DIR)/driver/sn986xx/watch_dog 
	$(MAKE) -C $(PRJ_DIR)/driver/sn986xx/watch_dog distclean
	rm -rf $(PRJ_DIR)/driver/sn986xx/watch_dog/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
ahb_dma:
else
ahb_dma: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/ahb_dma/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/ahb_dma/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/ahb_dma/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
ahb_dma-clean:
else
ahb_dma-clean: kernel-clean
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_host:
else
usb_host: kernel  lib_nonstd_c
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/usb_host/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_host-clean:
else
usb_host-clean: kernel-clean lib_nonstd_c-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_host_class:
else
usb_host_class: kernel  lib_nonstd_c  usb_host
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host_class/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host_class/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/usb_host_class/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_host_class-clean:
else
usb_host_class-clean: kernel-clean lib_nonstd_c-clean usb_host-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_device:
else
usb_device: kernel  lib_nonstd_c  middleware_video  middleware_sd  timer  gpio
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_device/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_device/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_device/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_device/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_device/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/usb_device/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/usb_device/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/usb_device/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
usb_device-clean:
else
usb_device-clean: kernel-clean lib_nonstd_c-clean middleware_video-clean middleware_sd-clean timer-clean gpio-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
wifi:
else
wifi: kernel  middleware_lwip  usb_host
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/wifi/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/wifi/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/wifi/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/wifi/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/wifi/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/wifi/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/wifi/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/wifi/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
wifi-clean:
else
wifi-clean: kernel-clean middleware_lwip-clean usb_host-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
bootinfo:
else
bootinfo: kernel
endif
	if [ -d $(PRJ_DIR)/driver/sn986xx/bootinfo/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/bootinfo/target/include/* $(DRIVER_INC_DIR); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/bootinfo/target/lib/* $(DRIVER_LIB_DIR); \
	fi
ifeq ($(CONFIG_RESCUE_SYSTEM), y)
	if [ -d $(PRJ_DIR)/driver/sn986xx/bootinfo/target ]; then \
		ln -sf $(PRJ_DIR)/driver/sn986xx/bootinfo/target/include/* $(DRIVER_INC_DIR_RESCUE); \
		ln -sf $(PRJ_DIR)/driver/sn986xx/bootinfo/target/lib/* $(DRIVER_LIB_DIR_RESCUE); \
	fi
endif
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/driver/sn986xx/bootinfo/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/driver/sn986xx/bootinfo/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
bootinfo-clean:
else
bootinfo-clean: kernel-clean
endif


##############################
###those are app modules######
##############################

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
ipcam:
else
ipcam: mac  timer  uart  kernel  cli  wifi  isp  lib_nonstd_c  middleware_lib_cloud  middleware_json  middleware_nvram  middleware_td  middleware_record  middleware_usbd
endif
	if [ -d $(PRJ_DIR)/app/ipcam/target ]; then \
		cp -rf $(PRJ_DIR)/app/ipcam/target/* $(PRJ_IMAGE_DIR); \
	fi
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/app/ipcam/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/app/ipcam/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
ipcam-clean:
else
ipcam-clean: mac-clean timer-clean uart-clean kernel-clean cli-clean wifi-clean isp-clean lib_nonstd_c-clean middleware_lib_cloud-clean middleware_json-clean middleware_nvram-clean middleware_td-clean middleware_record-clean middleware_usbd-clean 
endif


ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
integration:
else
integration: mac  timer  uart  kernel  cli  lib_nonstd_c
endif
	$(MAKE) -C $(PRJ_DIR)/app/integration all OBJ_DIR=$(PRJ_OBJ_DIR)/app/integration 
	$(MAKE) -C $(PRJ_DIR)/app/integration install INSTALL_DIR=$(PRJ_DIR)/app/integration/target OBJ_DIR=$(PRJ_OBJ_DIR)/app/integration 
	if [ -d $(PRJ_DIR)/app/integration/target ]; then \
		cp -rf $(PRJ_DIR)/app/integration/target/* $(PRJ_IMAGE_DIR); \
	fi
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/app/integration/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/app/integration/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
integration-clean:
else
integration-clean: mac-clean timer-clean uart-clean kernel-clean cli-clean lib_nonstd_c-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/app/integration clean OBJ_DIR=$(PRJ_OBJ_DIR)/app/integration 
	$(MAKE) -C $(PRJ_DIR)/app/integration distclean
	rm -rf $(PRJ_DIR)/app/integration/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
dashcam:
else
dashcam: mac  timer  uart  kernel  cli  wifi  isp  lib_nonstd_c bootinfo  middleware_json  middleware_nvram  middleware_record  middleware_fwupgrade  middleware_usbd  middleware_automount
endif
	$(MAKE) -C $(PRJ_DIR)/app/dashcam all OBJ_DIR=$(PRJ_OBJ_DIR)/app/dashcam 
	$(MAKE) -C $(PRJ_DIR)/app/dashcam install INSTALL_DIR=$(PRJ_DIR)/app/dashcam/target OBJ_DIR=$(PRJ_OBJ_DIR)/app/dashcam 
	if [ -d $(PRJ_DIR)/app/dashcam/target ]; then \
		cp -rf $(PRJ_DIR)/app/dashcam/target/* $(PRJ_IMAGE_DIR); \
	fi
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/app/dashcam/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/app/dashcam/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
dashcam-clean:
else
dashcam-clean: mac-clean timer-clean uart-clean kernel-clean cli-clean wifi-clean isp-clean lib_nonstd_c-clean bootinfo-clean middleware_json-clean middleware_nvram-clean middleware_record-clean middleware_fwupgrade-clean middleware_usbd-clean middleware_automount-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/app/dashcam clean OBJ_DIR=$(PRJ_OBJ_DIR)/app/dashcam 
	$(MAKE) -C $(PRJ_DIR)/app/dashcam distclean
	rm -rf $(PRJ_DIR)/app/dashcam/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
qrcode:
else
qrcode: mac  timer  uart  kernel  cli  wifi  isp  lib_nonstd_c bootinfo  middleware_json  middleware_nvram  middleware_record  middleware_fwupgrade  middleware_usbd  middleware_automount  middleware_zbar-0.10
endif
	$(MAKE) -C $(PRJ_DIR)/app/qrcode all OBJ_DIR=$(PRJ_OBJ_DIR)/app/qrcode 
	$(MAKE) -C $(PRJ_DIR)/app/qrcode install INSTALL_DIR=$(PRJ_DIR)/app/qrcode/target OBJ_DIR=$(PRJ_OBJ_DIR)/app/qrcode 
	if [ -d $(PRJ_DIR)/app/qrcode/target ]; then \
		cp -rf $(PRJ_DIR)/app/qrcode/target/* $(PRJ_IMAGE_DIR); \
	fi
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/app/qrcode/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/app/qrcode/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
qrcode-clean:
else
qrcode-clean: mac-clean timer-clean uart-clean kernel-clean cli-clean wifi-clean isp-clean lib_nonstd_c-clean bootinfo-clean middleware_json-clean middleware_nvram-clean middleware_record-clean middleware_fwupgrade-clean middleware_usbd-clean middleware_automount-clean middleware_zbar-0.10-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/app/qrcode clean OBJ_DIR=$(PRJ_OBJ_DIR)/app/qrcode 
	$(MAKE) -C $(PRJ_DIR)/app/qrcode distclean
	rm -rf $(PRJ_DIR)/app/qrcode/target

ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
mptool:
else
mptool: mac  timer  uart  kernel  cli  wifi  isp  lib_nonstd_c bootinfo  middleware_json  middleware_nvram  middleware_record  middleware_fwupgrade  middleware_usbd  middleware_automount
endif
	$(MAKE) -C $(PRJ_DIR)/app/mptool all OBJ_DIR=$(PRJ_OBJ_DIR)/app/mptool 
	$(MAKE) -C $(PRJ_DIR)/app/mptool install INSTALL_DIR=$(PRJ_DIR)/app/mptool/target OBJ_DIR=$(PRJ_OBJ_DIR)/app/mptool 
	if [ -d $(PRJ_DIR)/app/mptool/target ]; then \
		cp -rf $(PRJ_DIR)/app/mptool/target/* $(PRJ_IMAGE_DIR); \
	fi
ifeq ($(code-size),1) 
	if [ -d $(PRJ_DIR)/app/mptool/target/lib ]; then \
		$(CODESIZE) -t -d $(PRJ_DIR)/app/mptool/target/lib/*>>codesize.txt; \
	fi; 
endif 
ifeq ($(shell echo $(MODULE_ONLY) | tr "[:upper:]" "[:lower:]" ), yes)
mptool-clean:
else
mptool-clean: mac-clean timer-clean uart-clean kernel-clean cli-clean wifi-clean isp-clean lib_nonstd_c-clean bootinfo-clean middleware_json-clean middleware_nvram-clean middleware_record-clean middleware_fwupgrade-clean middleware_usbd-clean middleware_automount-clean 
endif
	$(MAKE) -C $(PRJ_DIR)/app/mptool clean OBJ_DIR=$(PRJ_OBJ_DIR)/app/mptool 
	$(MAKE) -C $(PRJ_DIR)/app/mptool distclean
	rm -rf $(PRJ_DIR)/app/mptool/target

snx_modules :=crosstool-4.5.2 image-tool board-info platform kernel cli trace lib_nonstd_c middleware_video middleware_audio middleware_sd middleware_sf middleware_fatfs middleware_record middleware_nvram middleware_lwip middleware_snx-ez middleware_rtsp middleware_cyassl middleware_lib_cloud middleware_json middleware_td middleware_libwebsockets middleware_usbd middleware_usbh middleware_zbar-0.10 middleware_fwupgrade middleware_automount middleware_file_manager middleware_zlib middleware_gzip middleware_mcu_ctrl mac video-codec uart i2c sensor isp audio sf sd sdio gpio pwm rtc spi timer watch_dog ahb_dma usb_host usb_host_class usb_device wifi bootinfo ipcam integration dashcam qrcode mptool

